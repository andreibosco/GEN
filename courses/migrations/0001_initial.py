# Generated by Django 3.0.3 on 2020-05-19 18:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Course name (max 100 characters)', max_length=100, unique=True)),
                ('code', models.CharField(help_text='Course code (max 10 characters)', max_length=10, verbose_name='course code')),
                ('description', models.CharField(help_text='Course description (max 400 characters)', max_length=400)),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('enable_gamification', models.BooleanField(default=True, help_text='Enables voting in discussions and comments', verbose_name='gamification')),
                ('show_scoreboard', models.BooleanField(default=True, help_text='Requires gamification')),
                ('show_leaderboard', models.BooleanField(default=True, help_text='Requires gamification')),
                ('show_progress_tracker', models.BooleanField(default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='course', to=settings.AUTH_USER_MODEL)),
                ('instructors', models.ManyToManyField(related_name='instructor', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(related_name='member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Section name (max 15 characters)', max_length=15)),
                ('description', models.CharField(blank=True, help_text='Course description (max 200 characters)', max_length=200, null=True)),
                ('section_type', models.CharField(choices=[('D', 'Discussion boards'), ('V', 'Videos'), ('Q', 'Quizzes'), ('U', 'Uploads')], max_length=1)),
                ('published', models.BooleanField(default=False)),
                ('custom_order', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='courses.Course')),
                ('requirement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='courses.Section')),
            ],
            options={
                'verbose_name_plural': 'sections',
                'ordering': ['custom_order'],
            },
        ),
        migrations.CreateModel(
            name='SectionItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(help_text='Brief description (max 200 characters)', max_length=200)),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='start date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='end date')),
                ('published', models.BooleanField(default=False)),
                ('custom_order', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='section_items', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='section_items', to='courses.Section')),
            ],
            options={
                'ordering': ['custom_order'],
            },
        ),
    ]
